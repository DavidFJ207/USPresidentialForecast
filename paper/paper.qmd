---
title: "Forecasting the 2024 US Presidential Election"
subtitle: "My subtitle if needed"
author: 
  - Tina Kim
  - David Flores
  - Kevin Shao
thanks: "Code and data are available at: https://github.com/DavidFJ207/USPresidentialForecast"
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false
library(tidyverse)
library(dplyr)
library(knitr)
library(lubridate)
library(ggplot2)
library(ggcorrplot)
library(kableExtra)
library(arrow)
library(zoo)
```


# Introduction

*Overview paragraph:* Provide a brief overview of the context of the upcoming US presidential election and the importance of forecasting its results.

*Estimand paragraph:* Define the estimand clearly (e.g., predicting the probability of a candidate winning the election based on poll data).

*Results paragraph:* Summarize the key findings of the model, highlighting its predictive accuracy and implications.

*Why it matters paragraph:* Explain the broader significance of accurately forecasting election results for politics, society, and policymaking.

*Telegraphing paragraph:* 
The remainder of this paper is structured as follows: Section 2 details the data and measurement process; Section 3 covers model development and results; Section 4 discusses implications and future steps.
The remainder of this paper is structured as follows. @sec-data....


\newpage  
# Data {#sec-data}  

## Overview  

```{r}
#| echo: false
#| warning: false
#| message: false

set.seed(754)
poll_data <- read_parquet(here::here(
  "data/02-analysis_data/summarized_state_poll_data.parquet"))
time_data <- read_parquet(here::here(
  "data/02-analysis_data/timeline_data.parquet"))

```

```{r}
#| label: fig-predictors-pct-summary
#| tbl-cap: "Latest Poll Points by Party"
#| echo: false
#| warning: false
#| message: false

poll_summary <- poll_data %>%
  group_by(state) %>%   
  summarise(
    dem_total_pct = sum(democrat_pct, na.rm = TRUE),
    rep_total_pct = sum(republican_pct, na.rm = TRUE),
    highly_educated_pct = mean(`What is the highest level of education you have attained? College graduate`, na.rm = TRUE),
    lower_educated_pct = mean(`What is the highest level of education you have attained? High school or less`, na.rm = TRUE),
    female_pct = mean(`Can you please tell me your gender? Female`, na.rm = TRUE),
    male_pct = mean(`Can you please tell me your gender? Male`, na.rm = TRUE),
    non_binary_other_pct = mean(`Can you please tell me your gender? Nonbinary or other`, na.rm = TRUE),
    caucasian_pct = mean(`For statistical purposes only, can you please tell me your ethnicity? White or Caucasian`, na.rm = TRUE),
    minority_pct = 100 - caucasian_pct
  ) %>%
  mutate(across(everything(), ~ replace_na(., 0))) %>%  # Replace NA values with 0
  mutate(across(where(is.numeric), ~ round(., 1)))  # Round to nearest tenth

colnames(poll_summary) <- c("State", "Democrat Pct", "Republican Pct", 
                            "High Educated", "Low Educated", "Female", 
                            "Male", "Nonbinary", "Caucasian", 
                            "Minority Ethnicity")

poll_summary_party <- poll_summary %>%
  select(State, `Democrat Pct`, `Republican Pct`)

poll_summary_demographics <- poll_summary %>%
  select(State, `High Educated`, `Low Educated`, `Female`, 
         `Male`, `Nonbinary`, `Caucasian`, 
         `Minority Ethnicity`)

# Table for party percentages
kable(poll_summary_party) %>%
  kable_styling(font_size = 10, position = "center", full_width = FALSE)

# Second table for demographic variables
kable(poll_summary_demographics) %>%
  kable_styling(font_size = 6, position = "center", full_width = FALSE)

```
We sourced the "Presidential General Election Polls" dataset from FiveThirtyEight [@FiveThirtyEight2024] and performed an in-depth analysis using the statistical programming language R [@citeR].

Our primary objective was to clean, organize, and analyze U.S. presidential election polling data to provide insights into voter preferences by state. This involved selecting data from reputable pollsters, organizing it by state, and addressing any missing or incomplete entries. Additional datasets were merged where necessary, and after thoroughly addressing missing values, we finalized a polished dataset ready for analysis. Below is a table summarizing the polling data by state, showcasing voter preferences by party and demographic breakdowns. The table highlights key trends and differences across states in terms of party lean and demographic distribution. @fig-predictors-pct-summary provides a snapshot of these findings.


## Measurement  
For this analysis, we selected Emerson as our primary pollster. The rationale behind this choice is explained in detail in @sec-appenA. Emerson’s polls provided essential details, including polling date ranges, party affiliations, sample sizes, and the percentage breakdown of support for different political parties.

We focused on analyzing voter preferences based on party affiliation rather than individual candidate support, as this was more relevant to predicting overall trends. By capturing the broader party dynamics, our model aims to forecast how states are likely to swing in future elections, especially with respect to swing states. This focus will be elaborated in our results section, @sec-results.

Additionally, the Emerson dataset included critical demographic data, such as respondents' political preferences, motivations for voting in the 2024 election, opinions on Donald Trump’s legal battles, and perspectives on major political figures and issues. These details, coupled with information on party affiliation, sources of political news, and other personal attributes, allowed us to paint a richer picture of the voting landscape.

To ensure uniformity across all states, we concentrated on questions that were consistently asked across the entire dataset. This enabled us to perform state-level aggregation and analysis without being limited by state-specific polling questions, ensuring a standardized approach across the board.

## Outcome variables
The initial analysis of the dataset revealed some key trends in party preferences across different states. In @fig-party-results, we illustrate which states exhibit the strongest leanings toward either the Democratic or Republican party. This visualization plays a crucial role in identifying the pivotal swing states that lie close to the center of the graph. These swing states, which show near-equal support for both parties, are of particular interest for future election predictions, as they are likely to determine the overall election outcome.

```{r}
#| label: fig-party-results
#| fig-cap: Example Predictor Variable Visualization
#| echo: false

poll_summary <- poll_data %>%
  group_by(state) %>%   
  summarise(
    dem_total_pct = sum(democrat_pct, na.rm = TRUE),
    rep_total_pct = sum(republican_pct, na.rm = TRUE)
  ) %>%
   mutate(party_diff = dem_total_pct - rep_total_pct)

# Create the vertical bar graph
ggplot(poll_summary, aes(x = party_diff, y = reorder(state, party_diff))) +
  geom_col(aes(fill = party_diff > 0), show.legend = FALSE) +  
  scale_fill_manual(values = c("red", "blue")) +  
  labs(x = "Party Lean (Democrat vs. Republican)", y = "State",
       title = "Party Leaning by State (Democrat vs. Republican)") +
  theme_minimal() +
  theme(axis.text.y = element_text(size = 6))  

```
```{r}
#| label: fig-party-extremes
#| fig-cap: Demographic Differences Between Top Red and Blue States
#| echo: false
#| warning: false
#| message: false

library(tidyverse)

# Prepare the poll_summary data frame
poll_summary <- poll_data %>%
  mutate(party_diff = democrat_pct - republican_pct) %>%
  select(-c(2, 3, 4, 6, 7, 8, 9, 11)) %>%  # Remove specific columns by index
  select(-contains('Mode')) %>%             # Remove columns containing 'Mode' in their names
  select(-contains('registration')) %>%     # Remove columns containing 'registration' in their names
  drop_na()                                 # Remove rows with any NA values

# Function to identify top N blue and N red states
identify_top_states <- function(data, n) {
  data %>%
    mutate(party_diff = democrat_pct - republican_pct) %>%
    arrange(desc(party_diff)) %>%
    summarise(
      blue_states = list(state[1:n]),  # Use 'n' instead of hardcoding 4
      red_states = list(state[(nrow(data) - n + 1):nrow(data)])
    )
}

# Function to compute mean differences for all numeric variables
compute_mean_differences <- function(data, blue_states, red_states) {
  # Select numeric variables excluding 'state' and 'party_diff'
  numeric_vars <- data %>%
    select(-state, -party_diff) %>%
    select(where(is.numeric)) %>%
    names()
  
  # Compute means for blue states
  blue_means <- data %>%
    filter(state %in% blue_states) %>%
    summarise(across(all_of(numeric_vars), mean, na.rm = TRUE))
  
  # Compute means for red states
  red_means <- data %>%
    filter(state %in% red_states) %>%
    summarise(across(all_of(numeric_vars), mean, na.rm = TRUE))
  
  # Compute absolute differences
  diff_df <- tibble(
    Variable = numeric_vars,
    Blue_Mean = as.numeric(blue_means[1, ]),
    Red_Mean = as.numeric(red_means[1, ]),
    Abs_Difference = abs(as.numeric(blue_means[1, ]) - as.numeric(red_means[1, ]))
  )
  
  # Remove variables where both means are NA
  diff_df <- diff_df %>%
    filter(!is.na(Blue_Mean) & !is.na(Red_Mean))
  
  diff_df
}

# Function to prepare data for plotting
prepare_plot_data <- function(diff_df, top_n = 6) {
  # Get top N variables with the largest differences
  top_diff_vars <- diff_df %>%
    arrange(desc(Abs_Difference)) %>%
    slice(1:top_n)
  
  # Prepare data for plotting
  plot_data <- top_diff_vars %>%
    select(Variable, Blue_Mean, Red_Mean) %>%
    pivot_longer(
      cols = c("Blue_Mean", "Red_Mean"), 
      names_to = "Group", 
      values_to = "Mean"
    ) %>%
    mutate(Group = recode(Group, "Blue_Mean" = "Blue States", "Red_Mean" = "Red States"))
  
  plot_data
}

# Function to create the plot with y-axis from 0 to 100 and data labels
create_comparison_plot <- function(plot_data) {
  ggplot(plot_data, aes(
    x = reorder(Variable, -Mean), 
    y = Mean, 
    fill = Group, 
    label = round(Mean, 1)
  )) +
    geom_col(position = position_dodge(width = 0.9)) +
    geom_text(
      position = position_dodge(width = 0.9), 
      vjust = -0.3, 
      size = 3
    ) +
    scale_fill_manual(
      values = c("Blue States" = "blue", "Red States" = "red")
    ) +
    labs(
      title = "Demographic Differences Between Top Red and Blue States",
      x = "Demographic Variable",
      y = "Mean Percentage",
      fill = "State Group"
    ) +
    scale_y_continuous(limits = c(0, 100)) +
    theme_minimal() +
    theme(
      axis.text.x = element_text(angle = 45, hjust = 1, size = 7)
    )
}

# Main analysis function
analyze_state_differences <- function(data, top_n_states = 1, top_n_vars = 6) {
  top_states <- identify_top_states(data, n = top_n_states)
  
  diff_df <- compute_mean_differences(
    data, 
    blue_states = top_states$blue_states[[1]], 
    red_states = top_states$red_states[[1]]
  )
  
  plot_data <- prepare_plot_data(diff_df, top_n = top_n_vars)
  
  plot <- create_comparison_plot(plot_data)
  
  list(
    plot = plot,
    top_variables = diff_df %>% arrange(desc(Abs_Difference)) %>% slice(1:top_n_vars)
  )
}

# Ensure 'state' column exists in poll_summary
if (!"state" %in% colnames(poll_summary)) {
  stop("The 'state' column does not exist in poll_summary.")
}

# Run the analysis
analysis_results <- analyze_state_differences(poll_summary, top_n_states = 1, top_n_vars = 5)

# Display the plot
analysis_results$plot

```
Beyond identifying swing states, it's also important to understand the differences in demographics between the most strongly Democratic ("blue") and Republican ("red") states. The bar graph in @fig-party-extremes takes a closer look at these differences. It focuses on key factors that show the biggest contrasts between Democratic-leaning and Republican-leaning states, helping to highlight how these factors differ between the most extreme red and blue states.  

The @fig-party-extremes visualization provides insight into how people's responses to polls may influence their political preferences. This extra layer of analysis helps clarify the factors shaping the political leanings of different states and adds depth to our understanding of the electorate. In this case, we examine people's opinions on the current president and their voting choices in past elections.  

Through these visualizations, we not only identify which states are most likely to swing in future elections but also gain a deeper understanding of the public's opinions that contribute to these partisan divides.  
   
## Predictor variables  

Next, we take a deeper dive into the various demographic and social factors that influence voter preferences. The predictors we consider include education levels, gender, ethnicity, and age group. These variables are crucial as they shape political preferences and are likely to influence which way a state leans politically.  
```{r}
#| label: updating-predictors
#| echo: false

column_refs <- list(
  democrat = "democrat_pct",
  republican = "republican_pct",
  highly_educated = "What is the highest level of education you have attained? College graduate",
  lower_educated = "What is the highest level of education you have attained? High school or less",
  female = "Can you please tell me your gender? Female",
  male = "Can you please tell me your gender? Male",
  non_binary_other = "Can you please tell me your gender? Nonbinary or other",
  caucasian = "For statistical purposes only, can you please tell me your ethnicity? White or Caucasian",
  hispanic_latino = "For statistical purposes only, can you please tell me your ethnicity? Hispanic or Latino of any race",
  vote_trump = "Who did you vote for in the 2020 election? Donald Trump",
  vote_biden = "Who did you vote for in the 2020 election? Joe Biden",
  biden_approve = "Do you approve or disapprove of the job Joe Biden is doing as President? Approve",
  biden_disapprove = "Do you approve or disapprove of the job Joe Biden is doing as President? Disapprove",
)
```


In @fig-predictors-party-pct, we explore how these factors correlate with party lean across the U.S. states. For instance, higher levels of education may correlate with a greater likelihood of supporting the Democratic party, while other demographic factors such as ethnicity and age may play different roles in shaping political affiliation. This analysis helps us to identify which factors have the greatest influence in each state, offering a clearer understanding of what drives the electorate.  

```{r}
#| label: fig-predictors-party-pct
#| fig-cap: Example Predictor Variable Visualization
#| echo: false

# Calculate poll_summary with rounding to the nearest tenth
poll_summary <- poll_data %>%
  group_by(state) %>%
  summarise(
    dem_total_pct = round(sum(.data[[column_refs$democrat]], na.rm = TRUE), 1),
    rep_total_pct = round(sum(.data[[column_refs$republican]], na.rm = TRUE), 1),
    highly_educated_pct = round(mean(.data[[column_refs$highly_educated]], na.rm = TRUE), 1),
    lower_educated_pct = round(mean(.data[[column_refs$lower_educated]], na.rm = TRUE), 1),
    female_pct = round(mean(.data[[column_refs$female]], na.rm = TRUE), 1),
    male_pct = round(mean(.data[[column_refs$male]], na.rm = TRUE), 1),
    non_binary_other_pct = round(mean(.data[[column_refs$non_binary_other]], na.rm = TRUE), 1),
    caucasian_pct = round(mean(.data[[column_refs$caucasian]], na.rm = TRUE), 1),
    minority_pct = round(100 - caucasian_pct, 1)
  ) %>%
  mutate(party_diff = round(dem_total_pct - rep_total_pct, 1)) %>%
  drop_na()

# Select relevant numeric columns for correlation matrix, excluding PartyDifference
corr_data <- poll_summary %>%
  select(
    Democrat = dem_total_pct,
    Republican = rep_total_pct,
    HighlyEducated = highly_educated_pct,
    LowerEducated = lower_educated_pct,
    Female = female_pct,
    Male = male_pct,
    NonBinary = non_binary_other_pct,
    Caucasian = caucasian_pct,
    Minority = minority_pct
    # No age-related columns included anymore
  )

# Calculate the correlation matrix
cor_matrix <- cor(corr_data, use = "complete.obs")

# Set correlations less than -0.9 to NA
cor_matrix[cor_matrix < -0.9] <- NA

# Visualize the correlation matrix without hierarchical clustering
ggcorrplot(cor_matrix, 
           hc.order = FALSE,  
           type = "lower", 
           lab = TRUE, 
           lab_size = 2,  # Size for correlation labels
           title = "Correlation Matrix of Predictors and Party Lean",
           colors = c("blue", "white", "red"),  
           legend.title = "Correlation") +
  theme(
    plot.title = element_text(size = 12, hjust = 0.5),  # Title size and centered
    axis.text = element_text(size = 1),  # Axis text size
    legend.text = element_text(size = 10),  # Legend text size
    legend.title = element_text(size = 10),  # Legend title size
    axis.title = element_text(size = 1)  # Axis labels size
  )
```
  
```{r}
#| label: fig-predictors-party-pct-2
#| fig-cap: Example Voting and Approval Predictor Variable Visualization
#| echo: false

# Calculate poll_summary with rounding to the nearest tenth
poll_summary_2 <- poll_data %>%
  group_by(state) %>%
  summarise(
    dem_total_pct = round(sum(.data[[column_refs$democrat]], na.rm = TRUE), 1),
    rep_total_pct = round(sum(.data[[column_refs$republican]], na.rm = TRUE), 1),
    vote_trump_pct = round(mean(.data[[column_refs$vote_trump]], na.rm = TRUE), 1),
    vote_biden_pct = round(mean(.data[[column_refs$vote_biden]], na.rm = TRUE), 1),
    biden_approve_pct = round(mean(.data[[column_refs$biden_approve]], na.rm = TRUE), 1),
    biden_disapprove_pct = round(mean(.data[[column_refs$biden_disapprove]], na.rm = TRUE), 1)
  ) %>%
  mutate(party_diff = round(dem_total_pct - rep_total_pct, 1)) %>%
  drop_na()

# Select relevant numeric columns for correlation matrix, excluding PartyDifference
corr_data_2 <- poll_summary_2 %>%
  select(
    Democrat = dem_total_pct,
    Republican = rep_total_pct,
    VotedTrump2020 = vote_trump_pct,
    VotedBiden2020 = vote_biden_pct,
    ApprovesOfBiden = biden_approve_pct,
    DisapprovesOfBiden = biden_disapprove_pct
  )

# Calculate the correlation matrix
cor_matrix_2 <- cor(corr_data_2, use = "complete.obs")

# Set correlations less than -0.9 to NA
cor_matrix_2[cor_matrix_2 < -0.9] <- NA

# Visualize the correlation matrix without hierarchical clustering
ggcorrplot(cor_matrix_2, 
           hc.order = FALSE,  
           type = "lower", 
           lab = TRUE, 
           lab_size = 2,  # Size for correlation labels
           title = "Correlation Matrix of Voting Preferences and State Lean",
           colors = c("blue", "white", "red"),  
           legend.title = "Correlation") +
  theme(
    plot.title = element_text(size = 12, hjust = 0.5),  # Title size and centered
    axis.text = element_text(size = 1),  # Axis text size
    legend.text = element_text(size = 10),  # Legend text size
    legend.title = element_text(size = 10),  # Legend title size
    axis.title = element_text(size = 1)  # Axis labels size
  )

```   

```{r}
#| label: fig-predictors-education-race-voting
#| fig-cap: Correlation Matrix of Education, Race, and Past Voting Behavior
#| echo: false

# Calculate poll_summary with rounding to the nearest tenth
poll_summary_3 <- poll_data %>%
  group_by(state) %>%
  summarise(
    dem_total_pct = round(sum(.data[[column_refs$democrat]], na.rm = TRUE), 1),
    rep_total_pct = round(sum(.data[[column_refs$republican]], na.rm = TRUE), 1),
    highly_educated_pct = round(mean(.data[[column_refs$highly_educated]], na.rm = TRUE), 1),
    lower_educated_pct = round(mean(.data[[column_refs$lower_educated]], na.rm = TRUE), 1),
    caucasian_pct = round(mean(.data[[column_refs$caucasian]], na.rm = TRUE), 1),
    minority_pct = round(100 - caucasian_pct, 1),
    vote_trump_pct = round(mean(.data[[column_refs$vote_trump]], na.rm = TRUE), 1),
    vote_biden_pct = round(mean(.data[[column_refs$vote_biden]], na.rm = TRUE), 1)
  ) %>%
  mutate(party_diff = round(dem_total_pct - rep_total_pct, 1)) %>%
  drop_na()

# Select relevant numeric columns for correlation matrix, excluding PartyDifference
corr_data_3 <- poll_summary_3 %>%
  select(
    Democrat = dem_total_pct,
    Republican = rep_total_pct,
    HighlyEducated = highly_educated_pct,
    LowerEducated = lower_educated_pct,
    Caucasian = caucasian_pct,
    Minority = minority_pct,
    VotedTrump2020 = vote_trump_pct,
    VotedBiden2020 = vote_biden_pct
  )

# Calculate the correlation matrix
cor_matrix_3 <- cor(corr_data_3, use = "complete.obs")

# Set correlations less than -0.9 to NA
cor_matrix_3[cor_matrix_3 < -0.85] <- NA

# Visualize the correlation matrix without hierarchical clustering
ggcorrplot(cor_matrix_3, 
           hc.order = FALSE,  
           type = "lower", 
           lab = TRUE, 
           lab_size = 2,  # Size for correlation labels
           title = "Correlation Matrix of Education, Race, and Past Voting Behavior",
           colors = c("blue", "white", "red"),  
           legend.title = "Correlation") +
  theme(
    plot.title = element_text(size = 12, hjust = 0.5),  # Title size and centered
    axis.text = element_text(size = 1),  # Axis text size
    legend.text = element_text(size = 10),  # Legend text size
    legend.title = element_text(size = 10),  # Legend title size
    axis.title = element_text(size = 1)  # Axis labels size
  )

```
The correlation matrix in @fig-predictors-party-pct provides a detailed look at how various predictors are related to party preferences. From this, we can see which predictors—such as education or gender—are more strongly associated with Democratic or Republican leanings. The blue shading indicates stronger correlations with Democratic support, while red represents stronger correlations with Republican support.  

```{r}
# Convert `end_date` to Date format and ensure numeric columns
time_data <- time_data %>%
  mutate(end_date = as.Date(end_date, format = "%m/%d/%y"),
         pct = as.numeric(pct), 
         `Do you approve or disapprove of the job Joe Biden is doing as President? Approve` = 
           as.numeric(`Do you approve or disapprove of the job Joe Biden is doing as President? Approve`))

# Apply a 14-day rolling average (increase smoothing) to each group
time_data <- time_data %>%
  group_by(party) %>%
  mutate(pct_smooth = rollapply(pct, width = 7, FUN = mean, align = "right", fill = NA)) %>%
  ungroup() %>%
  mutate(biden_approval_smooth = rollapply(`Do you approve or disapprove of the job Joe Biden is doing as President? Approve`, 
                                           width = 7, FUN = mean, align = "right", fill = NA))

# Separate data for Democrats, Republicans, and Biden Approval
# Filter data for Democrats where state is NA
democrat_data <- time_data %>%
  filter(party == "DEM" & is.na(state))

# Filter data for Republicans where state is NA
republican_data <- time_data %>%
  filter(party == "REP" & is.na(state))

biden_approval <- time_data %>%
  filter(is.na(state)) %>%
  select(end_date, biden_approval_smooth)

# Create the time plot with ggplot2
ggplot() +
  # Plot Democrats' smoothed pct over time (blue)
  geom_line(data = democrat_data, aes(x = end_date, y = pct_smooth, color = "Democrats"), size = 1) +
  
  # Plot Republicans' smoothed pct over time (red)
  geom_line(data = republican_data, aes(x = end_date, y = pct_smooth, color = "Republicans"), size = 1) +
  
  # Plot Biden's smoothed Approval over time (green)
  geom_line(data = biden_approval, aes(x = end_date, y = biden_approval_smooth, color = "Biden Approval"), size = 1) +
  
  # Customize labels, theme, colors, and y-axis limits
  labs(title = "Democrat vs. Republican and Biden Approval Over Time (Smoothed)",
       x = "Date",
       y = "Percentage (%)",
       color = "Legend") +
  scale_color_manual(values = c("Democrats" = "blue", "Republicans" = "red", "Biden Approval" = "lightblue")) +
  ylim(25, 55) + # Set y-axis range from 25 to 55
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))



```
This analysis offers valuable insights into how specific demographic factors shape the political landscape in different states, allowing us to better predict electoral outcomes based on shifting demographic trends.  

# Pollster Methodology Overview (Appendix A) {#sec-appenA}  
Append a detailed review of a chosen pollster's methodology, survey techniques, strengths, and weaknesses.

# Model {#sec-model}

## Model Development
The goal of our model is to forecast the popular vote outcome of the 2024 US presidential election.

*Person B:* Choose a linear or generalized linear model. Justify the selection based on your research goal and data structure.

## Model Set-up
Define the model mathematically and contextually (e.g., linear model predicting vote share).

\begin{align} 
y_i|\mu_i, \sigma &\sim \mbox{Normal}(\mu_i, \sigma) \\
\mu_i &= \alpha + \beta_i x_i \\
\alpha &\sim \mbox{Normal}(0, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\sigma &\sim \mbox{Exponential}(1)
\end{align}

We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.


*Person B*: Define all model components and assumptions.

## Model Justification
Our results are summarized in @tbl-modelresults. Discuss the implications of the findings and their predictive accuracy.


# Results {#sec-results}

Our results are summarized in @tbl-modelresults.

```{r}
#| label: tbl-modelresults
#| tbl-cap: "Forecasting model results based on poll data"
#| echo: false

# Display results of the model
```
*Person B*: Visualize the model's results and include any performance metrics (e.g., RMSE, test/train split).
```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: ""
#| warning: false

```


# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

Please don't use these as sub-heading labels - change them to be what your point actually is.

## Third discussion point

Discuss what the model reveals about the election forecast and its potential impact on understanding voting behavior.

*Person C*: Discuss limitations of the model and areas for further improvement.

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}

## Appendix A: Pollster Methodology Overview
*Person A*: Provide a detailed methodology review for the chosen pollster, including survey design, population sampling, non-response handling, etc.

## Appendix B: Idealized Survey Design for $100K Budget
*Person C*: Develop and describe an ideal survey design for forecasting the election with a $100K budget, and include survey link.

Sampling approach: The sampling approach we will use is stratified random sampling where we divide the population into strata based on.... (age, gender, education level, etc.)
Recruit Respondents: We will recruit respondents using an online survey on Google Forms so that we can minimize the cost and maximize the range of respondents we can reach. We will spend a portion of our budget (specify here) to advertise these surveys and also send out emails, with an additional monetary incentive (specify here) to encourage more participation. 
Data validation: IP address tracking to prevent duplicate responses.
Poll Aggregation: Incorporate Bayesian Inference.

Survey Link: (Short questionnaire asking for demographic questions to be added here)
Copy of Survey: 

## Additional Data & Model Details
Include any technical details on data cleaning, model diagnostics, and posterior checks.



# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows... 

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. It shows... This suggests...

@fig-stanareyouokay-2 is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

```


\newpage


# References


